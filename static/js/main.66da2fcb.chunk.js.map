{"version":3,"sources":["assets/search-24px.svg","assets/clear-24px.svg","assets/first_page-24px.svg","assets/chevron_left-24px.svg","assets/chevron_right-24px.svg","assets/last_page-24px.svg","assets/arrow_downward-24px.svg","components/table-header/index.js","components/table-footer/index.js","components/no-records-text/index.js","components/loader-indicator/index.js","components/column-names/index.js","constants.js","components/table/index.js","components/add-row/index.js","components/select-data/index.js","components/selected-row/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Head","searchRowByValue","searchValue","clearSearchField","className","src","require","alt","type","placeholder","value","onChange","e","target","onClick","Footer","dataLength","currentPage","setCurrentPage","NoRecordsText","text","Fragment","Array","map","el","key","Loader","selectedData","ColumnNames","columns","sortByColumn","column","Table","setSelectedRow","newRow","useState","setSearchValue","data","setData","savedData","setSavedData","currentColumn","setCurrentColumn","asc","toggleAsc","currentSortIcon","setCurrentSortIcon","useEffect","fetch","then","response","json","tableData","filter","o","some","prop","toString","toLowerCase","includes","order","currentTarget","textContent","sortIcon","lastElementChild","classList","remove","add","sort","a","b","length","slice","row","sheet","window","document","styleSheets","console","log","cssRules","deleteRule","insertRule","lastName","id","selectRow","AddRowButton","setNewRow","useForm","register","handleSubmit","watch","reset","isShowAddInTable","setIsShowAddInTable","isShow","toggleShow","fieldsData","isAnyFieldIsEmpty","Object","keys","dropDownMenu","querySelector","style","display","onSubmit","htmlFor","name","required","ref","SelectData","setSelectedData","SelectedRow","selectedRow","address","streetAddress","city","state","zip","description","firstName","readOnly","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yLAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,iD,+FC0B5BC,EAxBF,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,iBAC7C,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,wBAAf,cACA,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,OAAOC,IAAKC,EAAQ,IAA2BC,IAAI,KAClE,2BACEH,UAAU,qCACVI,KAAK,OACLC,YAAY,SACZC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOX,EAAiBW,EAAEC,OAAOH,UAE7C,yBACEN,UAAU,OACVC,IAAKC,EAAQ,IACbQ,QAASX,EACTI,IAAI,QC4CCQ,EA7DA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAYzC,OACE,6BACA,2BAAOd,UAAU,iBACf,+BACE,4BACE,wBAAIA,UAAU,qBACZ,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,+BACb,yBACEA,UAAU,8CACVU,QAAS,kBAAMI,EAAe,IAC9Bb,IAAKC,EAAQ,IACbC,IAAI,KAEN,yBACEH,UAAU,8CACVU,QA3BK,WACfG,EAAc,GAChBC,EAAeD,EAAc,IA0BjBZ,IAAKC,EAAQ,IACbC,IAAI,KAEN,0BAAMH,UAAU,qCACbY,EAAa,GAAb,UACMA,EAAa,IAAM,IADzB,YACgCA,EADhC,eACiDA,GADjD,UAEM,IAAMC,EAAc,GAAK,EAF/B,YAGK,GAAKA,EAHV,eAIUD,IAEb,yBACEZ,UAAU,8CACVU,QAlCC,WACXG,EAAcD,EAAa,IAC7BE,EAAeD,EAAc,IAiCjBZ,IAAKC,EAAQ,IACbC,IAAI,KAEN,yBACEH,UAAU,8CACVU,QAAS,kBAAMI,EAAe,KAC9Bb,IAAKC,EAAQ,IACbC,IAAI,aChCPY,EAjBO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,kBAAC,IAAMC,SAAP,KACE,4BACE,6BACA,6BACA,4BAAKD,GAAc,yBACnB,6BACA,8BAED,YAAIE,MAAM,IAAIC,KAAI,SAACC,EAAIC,GAAL,OACjB,wBAAIA,IAAKA,SCQFC,EAlBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChB,OACE,kBAAC,IAAMN,SAAP,KACGM,EACC,wBAAIvB,UAAU,aACZ,6BACA,6BACA,4BACE,yBAAKA,UAAU,aAInB,kBAAC,EAAD,CAAegB,KAAK,oCCWbQ,EAxBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC9B,OACE,+BACE,4BACGD,EAAQN,KAAI,SAACQ,EAAQN,GAAT,OACX,wBAAIA,IAAKA,GACP,0BACErB,UAAU,4BACVU,QAAS,SAACF,GAAD,OAAOkB,EAAalB,KAE7B,6BAAMmB,GACN,yBACE3B,UAAU,yBACVC,IAAKC,EAAQ,IACbC,IAAI,aChBPsB,EAAU,CAAC,KAAM,YAAa,WAAY,QAAS,SC8HjDG,EAtHD,SAAC,GAA8C,IAA5CL,EAA2C,EAA3CA,aAAcM,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAAa,EACpBC,mBAAS,IADW,mBACnDjC,EADmD,KACtCkC,EADsC,OAEpBD,mBAAS,GAFW,mBAEnDlB,EAFmD,KAEtCC,EAFsC,OAGlCiB,mBAAS,IAHyB,mBAGnDE,EAHmD,KAG7CC,EAH6C,OAIxBH,mBAAS,IAJe,mBAInDI,EAJmD,KAIxCC,EAJwC,OAKhBL,mBAAS,IALO,mBAKnDM,EALmD,KAKpCC,EALoC,OAMjCP,oBAAS,GANwB,mBAMnDQ,EANmD,KAM9CC,EAN8C,OAOZT,mBAAS,MAPG,mBAOnDU,EAPmD,KAOlCC,EAPkC,KAS1DC,qBAAU,WACa,OAAjBpB,IACFT,EAAe,GACfsB,EAAa,IACbF,EAAQ,IAERU,MADiC,UAAjBrB,EDrBH,0NACU,qOCsBpBsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJd,EAAQc,GACRZ,EAAaY,SAMlB,CAACzB,IACJoB,qBAAU,cACP,CAACV,IACJU,qBAAU,WACJb,IACFM,EAAa,CAACN,GAAF,mBAAaK,KACzBD,EAAQ,CAACJ,GAAF,mBAAaG,QAErB,CAACH,IAoDJ,OACE,yBAAK9B,UAAU,SACb,kBAAC,EAAD,CAAMH,iBA3Be,SAACS,GACxB0B,EAAe1B,GAEb4B,EADY,KAAV5B,EACM6B,EAGN,YAAIA,GAAWc,QAAO,SAACC,GAAD,MACpB,CAAC,KAAM,YAAa,WAAY,QAAS,SAASC,MAAK,SAACC,GAAD,OACrDF,EAAEE,GAAMC,WAAWC,cAAcC,SAASjD,EAAMgD,uBAmBZxD,YAAaA,EAAaC,iBAf/C,WACvBmC,EAAQC,GACRH,EAAe,OAcb,2BAAOhC,UAAU,eACf,kBAAC,EAAD,CAAayB,QAASA,EAASC,aAvDhB,SAAClB,EAAGgD,GACvB,IAAM7B,EAASnB,EAAEiD,cAAcC,YACzBC,EAAWnD,EAAEiD,cAAcG,iBAC7BjC,IAAWU,GACbmB,GAAQ,EACRhB,GAAU,GACVF,EAAiBX,GACO,OAApBc,GACFA,EAAgBoB,UAAUC,OAAO,sBAEnCpB,EAAmBiB,IACVhC,IAAWU,IACpBmB,EAAQjB,GAENiB,EACFG,EAASE,UAAUE,IAAI,sBAEvBJ,EAASE,UAAUC,OAAO,sBAE5B5B,EAAQ,YAAID,GAAM+B,MAAK,SAASC,EAAGC,GAC/B,OAAGD,EAAEtC,GAAUuC,EAAEvC,GAAkB6B,GAAS,EAAK,EAC9CS,EAAEtC,GAAUuC,EAAEvC,GAAkB6B,EAAS,GAAK,EAC5C,MAEThB,GAAWD,MAgCP,+BACIJ,EAAUgC,OAERlC,EAAKkC,OACPlC,EACGmC,MAAM,IAAMvD,EAAc,GAAI,GAAKA,GACnCM,KAAI,SAACkD,EAAKhD,GAAN,OACH,wBAAIA,IAAKA,EAAKX,QAAS,SAACF,GAAD,OArBnB,SAACA,EAAG6D,GACpB,IAAMC,EAAQC,OAAOC,SAASC,YAAY,GAC1CC,QAAQC,IAAIL,EAAMM,SAAST,OAAQ,UACL,KAA1BG,EAAMM,SAAST,QACjBG,EAAMO,WAAW,IAEEP,EAAMQ,WAAN,aAAuBT,EAAIU,SAAWV,EAAIW,GAA1C,0BAAsEV,EAAMM,SAAST,QAC1GtC,EAAewC,GAc2BY,CAAUzE,EAAG6D,IAAMrE,UAAS,6BAAwBqE,EAAIU,SAAWV,EAAIW,KACnG,4BAAI,6BAAMX,EAAG,KACb,4BAAI,6BAAMA,EAAG,YACb,4BAAI,6BAAMA,EAAG,WACb,4BAAI,6BAAMA,EAAG,QACb,4BAAI,6BAAMA,EAAG,YAGjB,kBAAC,EAAD,MAbF,kBAAC,EAAD,CAAQ9C,aAAcA,IAcvBU,EAAKkC,OAAS,GAAK,YAAIjD,OAAOe,EAAKkC,OAAS,EAAI,GAAKlC,EAAKkC,SAAShD,KAAI,SAACC,EAAIC,GAAL,OAAa,wBAAIA,IAAKA,SAGlG,kBAAC,EAAD,CACET,WAAYqB,EAAKkC,OACjBtD,YAAaA,EACbC,eAAgBA,M,QC9DToE,EAvDM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACWC,cAAzCC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,aAAcC,EADM,EACNA,MAAOC,EADD,EACCA,MADD,EAEUzD,oBAAS,GAFnB,mBAE/B0D,EAF+B,KAEbC,EAFa,OAGT3D,oBAAS,GAHA,mBAG/B4D,EAH+B,KAGvBC,EAHuB,KAiCtC,OATAjD,qBAAU,WACR,IAAMkD,EAAaN,IACbO,EAAoBC,OAAOC,KAAKH,GAAY1C,MAAK,SAACC,GAAD,MAA+B,KAArByC,EAAWzC,MAI1EsC,GAHGI,MAOL,6BACE,yBAAK9F,UAAU,2BACb,4BAAQA,UAAU,iBAAiBU,QAhCxB,WACf,IAAMuF,EAAezB,SAAS0B,cAAc,sBACxCP,GACFM,EAAaE,MAAMC,QAAU,OAC7BR,GAAYD,GACZH,MAEAS,EAAaE,MAAMC,QAAU,OAC7BR,GAAYD,MAyBPA,EAAS,SAAW,YAGzB,0BAAM3F,UAAU,oBAAoBqG,SAAUf,GAzBhC,SAAArD,GACZyD,IACFP,EAAUlD,GACVuC,SAAS0B,cAAc,sBAAsBC,MAAMC,QAAU,OAC7DR,GAAW,GACXJ,IACAE,GAAoB,QAoBjB,YAAIxE,MAAM,KAAM,YAAa,WAAY,QAAS,UAAUC,KAC3D,SAACC,EAAIC,GAAL,OACE,yBAAKA,IAAKA,GACR,2BAAOiF,QAASlF,GAAKA,GACrB,2BAAOmF,KAAMnF,EAAIhB,KAAa,OAAPgB,EAAc,SAAW,OAAQf,YAAae,EAAIoF,UAAQ,EAACC,IAAKpB,QAI5FI,GAAoB,2BAAOzF,UAAU,4BAA4BI,KAAK,cClChEsG,EAhBI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAIpB,OACE,yBAAK3G,UAAU,eACb,2BAAOsG,QAAQ,eAAf,8BACA,4BAAQC,KAAK,OAAOhG,SANH,SAACC,GACpBmG,EAAgBnG,EAAEC,OAAOH,QAKqBN,UAAU,uBAClD,4BAAQM,MAAM,IAAd,eACA,4BAAQA,MAAM,SAAd,WACA,4BAAQA,MAAM,OAAd,gB,OCwBKsG,EAlCK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAahF,EAAqB,EAArBA,eAWlC,OAVAc,qBAAU,WACHkE,EAAYC,SACfjF,EAAe,eAAIgF,EAAL,CAAkBC,QAAS,CACvCC,cAAe,UACfC,KAAM,UACNC,MAAO,UACPC,IAAK,WACJC,YAAa,gBAIlB,yBAAKnH,UAAU,gBACb,gJACA,2BAAI6G,EAAYO,WAChB,2BAAOd,QAAQ,eAAf,qDACA,8BAAUtB,GAAG,cAAc1E,MAAOuG,EAAYM,YAAaE,UAAQ,IAClE,YACInG,MACD,CAAEiG,YAAa,gGAAsB/D,KAAM,iBAC3C,CAAE+D,YAAa,mCAAW/D,KAAM,QAChC,CAAE+D,YAAa,oFAAoB/D,KAAM,SACzC,CAAE+D,YAAa,yCAAY/D,KAAM,SAEnCjC,KAAI,SAACC,EAAIC,GAAL,OACJ,yBAAKA,IAAKA,EAAKrB,UAAU,sBACvB,8BAAOoB,EAAG+F,aACV,2BAAIN,EAAYC,SAAWD,EAAYC,QAAQ1F,EAAGgC,aCA7CkE,MAvBf,WAAgB,IAAD,EAC2BvF,mBAAS,MADpC,mBACNR,EADM,KACQoF,EADR,OAEyB5E,mBAAS,MAFlC,mBAEN8E,EAFM,KAEOhF,EAFP,OAGeE,mBAAS,MAHxB,mBAGND,EAHM,KAGEqD,EAHF,KAIb,OACE,yBAAKnF,UAAU,OACb,kBAAC,EAAD,CAAY2G,gBAAiBA,IAC7B,kBAAC,EAAD,CAAcxB,UAAWA,IACzB,kBAAC,EAAD,CACE5D,aAAcA,EACdM,eAAgBA,EAChBC,OAAQA,IAET+E,GACC,kBAAC,EAAD,CACEA,YAAaA,EACbhF,eAAgBA,MCVN0F,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASpD,SAASqD,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1D,QAAQ0D,MAAMA,EAAMC,c","file":"static/js/main.66da2fcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-24px.db5d8122.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-24px.7c81dcc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/first_page-24px.3e5f66b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron_left-24px.28189801.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron_right-24px.87b76382.svg\";","module.exports = __webpack_public_path__ + \"static/media/last_page-24px.c5ad6e6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_downward-24px.28818c19.svg\";","import React from \"react\";\n\nconst Head = ({ searchRowByValue, searchValue, clearSearchField }) => {\n  return (\n    <div className=\"table__header\">\n      <div className=\"table__header__title\">Data table</div>\n      <div className=\"table__header__search-field__input-wrap\">\n        <img className=\"icon\" src={require(\"assets/search-24px.svg\")} alt=\"\" />\n        <input\n          className=\"table__header__search-field__input\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchValue}\n          onChange={(e) => searchRowByValue(e.target.value)}\n        />\n        <img\n          className=\"icon\"\n          src={require(\"assets/clear-24px.svg\")}\n          onClick={clearSearchField}\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Head;\n","import React from \"react\";\n\nconst Footer = ({ dataLength, currentPage, setCurrentPage }) => {\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n\n  const nextPage = () => {\n    if (currentPage < dataLength / 50) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n  return (\n    <div>\n    <table className=\"table__footer\">\n      <tfoot>\n        <tr>\n          <td className=\"table__footer__td\">\n            <div className=\"table__footer__td__page-info\">\n              <div className=\"page-info__table-pagination\">\n                <img\n                  className=\"page-info__table-pagination__contol-buttons\"\n                  onClick={() => setCurrentPage(1)}\n                  src={require(\"assets/first_page-24px.svg\")}\n                  alt=\"\"\n                />\n                <img\n                  className=\"page-info__table-pagination__contol-buttons\"\n                  onClick={previousPage}\n                  src={require(\"assets/chevron_left-24px.svg\")}\n                  alt=\"\"\n                />\n                <span className=\"page-info__table-pagination__text\">\n                  {dataLength < 50\n                    ? `${dataLength ? '1' : '0'}-${dataLength} of ${dataLength}`\n                    : `${50 * (currentPage - 1) + 1}-${\n                        50 * currentPage\n                      } of ${dataLength}`}\n                </span>\n                <img\n                  className=\"page-info__table-pagination__contol-buttons\"\n                  onClick={nextPage}\n                  src={require(\"assets/chevron_right-24px.svg\")}\n                  alt=\"\"\n                />\n                <img\n                  className=\"page-info__table-pagination__contol-buttons\"\n                  onClick={() => setCurrentPage(20)}\n                  src={require(\"assets/last_page-24px.svg\")}\n                  alt=\"\"\n                />\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst NoRecordsText = ({ text }) => {\n  return (\n    <React.Fragment>\n      <tr>\n        <td></td>\n        <td></td>\n        <td>{text ? text : 'no records to display'}</td>\n        <td></td>\n        <td></td>\n      </tr>\n      {[...Array(5)].map((el, key) => (\n        <tr key={key} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default NoRecordsText;\n","import React from \"react\";\nimport NoRecordsText from 'components/no-records-text';\n\nconst Loader = ({ selectedData }) => {\n  return (\n    <React.Fragment>\n      {selectedData ? (\n        <tr className=\"loader-tr\">\n          <td></td>\n          <td></td>\n          <td>\n            <div className=\"loader\" />\n          </td>\n        </tr>\n      ) : (\n        <NoRecordsText text='please select the amount data'/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst ColumnNames = ({ columns, sortByColumn }) => {\n  return(\n    <thead>\n      <tr>\n        {columns.map((column, key) => (\n          <th key={key}>\n            <span\n              className=\"table__body__thead-column\"\n              onClick={(e) => sortByColumn(e)}\n            >\n              <div>{column}</div>\n              <img\n                className=\"table__body__sort-icon\"\n                src={require(\"assets/arrow_downward-24px.svg\")}\n                alt=\"\"\n              />\n            </span>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nexport default ColumnNames;\n","export const columns = ['id', 'firstName', 'lastName', 'email', 'phone'];\nexport const url = 'http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\nexport const urlBiggerData = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\n","import React, { useState, useEffect } from \"react\";\nimport Head from 'components/table-header';\nimport Footer from 'components/table-footer';\nimport Loader from 'components/loader-indicator';\nimport ColumnNames from 'components/column-names';\nimport NoRecordsText from 'components/no-records-text';\nimport { url, urlBiggerData, columns } from 'constants.js';\n\nconst Table = ({ selectedData, setSelectedRow, newRow }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [savedData, setSavedData] = useState([]);\n  const [currentColumn, setCurrentColumn] = useState('');\n  const [asc, toggleAsc] = useState(true);\n  const [currentSortIcon, setCurrentSortIcon] = useState(null);\n\n  useEffect(() => {\n    if (selectedData !== null) {\n      setCurrentPage(1);\n      setSavedData([]);\n      setData([]);\n      const dataUrl = selectedData === 'small' ? url : urlBiggerData;\n      fetch(dataUrl)\n        .then(response => response.json())\n        .then(tableData => {\n          setData(tableData);\n          setSavedData(tableData);\n          // if we want to add new rows to fetched data\n          // setData([...savedData.filter((el) => el.id && !el.address), ...tableData]);\n          // setSavedData([...savedData.filter((el) => el.id && !el.address), ...tableData]);\n        });\n    }\n  }, [selectedData]);\n  useEffect(() => {\n  }, [data])\n  useEffect(() => {\n    if (newRow) {\n      setSavedData([newRow, ...savedData]);\n      setData([newRow, ...data]);\n    }\n  }, [newRow])\n  const sortByColumn = (e, order) => { // add toLowerCase\n    const column = e.currentTarget.textContent;\n    const sortIcon = e.currentTarget.lastElementChild;\n    if (column !== currentColumn) {\n      order = true;\n      toggleAsc(true);\n      setCurrentColumn(column);\n      if (currentSortIcon !== null) {\n        currentSortIcon.classList.remove('icon-direction-asc');\n      }\n      setCurrentSortIcon(sortIcon);\n    } else if (column === currentColumn) {\n      order = asc;\n    }\n    if (order) {\n      sortIcon.classList.add('icon-direction-asc');\n    } else {\n      sortIcon.classList.remove('icon-direction-asc');\n    }\n    setData([...data].sort(function(a, b){\n        if(a[column] < b[column]) { return order ? -1 :  1; }\n        if(a[column] > b[column]) { return order ?  1 : -1; }\n      return 0;\n    }));\n    toggleAsc(!asc);\n  }\n  const searchRowByValue = (value) => {\n    setSearchValue(value);\n    if (value === \"\") {\n      setData(savedData);\n    } else {\n      setData(\n        [...savedData].filter((o) =>\n          [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"].some((prop) =>\n            o[prop].toString().toLowerCase().includes(value.toLowerCase())))\n      );\n    }\n  }\n  const clearSearchField = () => {\n    setData(savedData);\n    setSearchValue('');\n  }\n  const selectRow = (e, row) => {\n    const sheet = window.document.styleSheets[0];\n    console.log(sheet.cssRules.length, 'length')\n    if (sheet.cssRules.length === 43) {\n      sheet.deleteRule(42);\n    }\n    const cssRuleIndex = sheet.insertRule(`.ln${row.lastName + row.id} { background: grey; }`, sheet.cssRules.length);\n    setSelectedRow(row);\n  }\n  return (\n    <div className=\"table\">\n      <Head searchRowByValue={searchRowByValue} searchValue={searchValue} clearSearchField={clearSearchField}/>\n      <table className=\"table__body\">\n        <ColumnNames columns={columns} sortByColumn={sortByColumn} />\n        <tbody>\n          {!savedData.length ? (\n            <Loader selectedData={selectedData}/>\n          ) : data.length ? (\n            data\n              .slice(50 * (currentPage - 1), 50 * currentPage)\n              .map((row, key) => (\n                <tr key={key} onClick={(e) => selectRow(e, row)} className={`table__body__row ln${row.lastName + row.id}`}>\n                  <td><div>{row[\"id\"]}</div></td>\n                  <td><div>{row[\"firstName\"]}</div></td>\n                  <td><div>{row[\"lastName\"]}</div></td>\n                  <td><div>{row[\"email\"]}</div></td>\n                  <td><div>{row[\"phone\"]}</div></td>\n                </tr>\n              ))\n          ) : <NoRecordsText/>}\n          {data.length < 9 && [...Array((data.length ? 9 : 3) - data.length)].map((el, key) => <tr key={key}/>)}\n        </tbody>\n      </table>\n      <Footer\n        dataLength={data.length}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst AddRowButton = ({ setNewRow }) => {\n  const { register, handleSubmit, watch, reset } = useForm();\n  const [isShowAddInTable, setIsShowAddInTable] = useState(false);\n  const [isShow, toggleShow] = useState(false);\n  const showForm = () => {\n    const dropDownMenu = document.querySelector(\".add-row__dropdown\");\n    if (isShow) {\n      dropDownMenu.style.display = \"none\";\n      toggleShow(!isShow);\n      reset();\n    } else {\n      dropDownMenu.style.display = \"flex\";\n      toggleShow(!isShow);\n    }\n  };\n  const addNewRow = data => {\n    if (setIsShowAddInTable) {\n      setNewRow(data);\n      document.querySelector(\".add-row__dropdown\").style.display = \"none\";\n      toggleShow(false);\n      reset();\n      setIsShowAddInTable(false);\n    }\n  }\n  useEffect(() => {\n    const fieldsData = watch();\n    const isAnyFieldIsEmpty = Object.keys(fieldsData).some((prop) => fieldsData[prop] === '');\n    if (!isAnyFieldIsEmpty) {\n      setIsShowAddInTable(true);\n    } else {\n      setIsShowAddInTable(false);\n    }\n  });\n  return (\n    <div>\n      <div className=\"add-row-button__wrapper\">\n        <button className=\"add-row-button\" onClick={showForm}>\n          {isShow ? \"Cancel\" : \"Add row\"}\n        </button>\n      </div>\n      <form className=\"add-row__dropdown\" onSubmit={handleSubmit(addNewRow)}>\n        {[...Array(\"id\", \"firstName\", \"lastName\", \"email\", \"phone\")].map(\n          (el, key) => (\n            <div key={key}>\n              <label htmlFor={el}>{el}</label>\n              <input name={el} type={el === 'id' ? 'number' : 'text'} placeholder={el} required ref={register}/>\n            </div>\n          )\n        )}\n        {isShowAddInTable && <input className='add-row__dropdown__submit' type=\"submit\" />}\n      </form>\n    </div>\n  );\n};\n\nexport default AddRowButton;\n","import React from 'react';\n\nconst SelectData = ({ setSelectedData }) => {\n  const dataSelected = (e) => {\n    setSelectedData(e.target.value);\n  }\n  return (\n    <div className='select-data'>\n      <label htmlFor=\"select-data\">Select the amount of data:</label>\n      <select name=\"data\" onChange={dataSelected} className='select-data__select'>\n          <option value=\"\">choose data</option>\n          <option value=\"small\">32 rows</option>\n          <option value=\"big\">1000 rows</option>\n      </select>\n    </div>\n  )\n}\n\nexport default SelectData;\n","import React, { useEffect } from \"react\";\n\nconst SelectedRow = ({ selectedRow, setSelectedRow }) => {\n  useEffect(() => {\n    if (!selectedRow.address) {\n      setSelectedRow({...selectedRow, address: {\n        streetAddress: 'no info',\n        city: 'no info',\n        state: 'no info',\n        zip: 'no info',\n      }, description: 'no info'});\n    }\n  });\n  return (\n    <div className=\"selected-row\">\n      <span>Выбран пользователь </span>\n      <b>{selectedRow.firstName}</b>\n      <label htmlFor=\"description\">Описание:</label>\n      <textarea id=\"description\" value={selectedRow.description} readOnly />\n      {[\n        ...Array(\n          { description: \"Адрес проживания: \", prop: \"streetAddress\" },\n          { description: \"Город: \", prop: \"city\" },\n          { description: \"Провинция/штат: \", prop: \"state\" },\n          { description: \"Индекс: \", prop: \"zip\" }\n        ),\n      ].map((el, key) => (\n        <div key={key} className=\"selected_row__prop\">\n          <span>{el.description}</span>\n          <b>{selectedRow.address && selectedRow.address[el.prop]}</b>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SelectedRow;\n","import React, { useState } from \"react\";\nimport Table from \"components/table\";\nimport AddRowButton from \"components/add-row\";\nimport SelectData from \"components/select-data\";\nimport SelectedRow from \"components/selected-row\";\n\nfunction App() {\n  const [selectedData, setSelectedData] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [newRow, setNewRow] = useState(null);\n  return (\n    <div className=\"App\">\n      <SelectData setSelectedData={setSelectedData} />\n      <AddRowButton setNewRow={setNewRow} />\n      <Table\n        selectedData={selectedData}\n        setSelectedRow={setSelectedRow}\n        newRow={newRow}\n      />\n      {selectedRow && (\n        <SelectedRow\n          selectedRow={selectedRow}\n          setSelectedRow={setSelectedRow}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}